npm install
npm install react-router-dom
npm install react-icons
npm install axios
npm install jspdf jspdf-autotable
npm install react-calendar
npm run dev


npm install 
node server.js


CREATE DATABASE IF NOT EXISTS VeterinariaDB;

-- Usar la base de datos
USE VeterinariaDB;

-- ===============================
-- TABLAS DE CATEGORÍAS Y SERVICIOS
-- ===============================

CREATE TABLE CategoriasProductos (
    CategoriaProductoID INT PRIMARY KEY AUTO_INCREMENT,
    NombreCategoria VARCHAR(100) NOT NULL
);

CREATE TABLE Subcategoria (
    SubcategoriaID INT PRIMARY KEY AUTO_INCREMENT,
    CategoriaProductoID INT NOT NULL,
    Nombre VARCHAR(100) NOT NULL,
    Descripcion TEXT, -- NVARCHAR(MAX) se convierte a TEXT en MySQL
    FOREIGN KEY (CategoriaProductoID) REFERENCES CategoriasProductos(CategoriaProductoID)
);

CREATE TABLE Servicios (
    ServicioID INT PRIMARY KEY AUTO_INCREMENT,
    NombreServicio VARCHAR(100) NOT NULL,
    Descripcion TEXT, -- NVARCHAR(MAX) se convierte a TEXT en MySQL
    Precio DECIMAL(10,2) NOT NULL CHECK (Precio >= 0), -- CHECK constraints son parseados pero no forzados en versiones antiguas de MySQL
    SubcategoriaID INT,
    FOREIGN KEY (SubcategoriaID) REFERENCES Subcategoria(SubcategoriaID)
);

-- ===============================
-- TABLAS DE PERSONAL
-- ===============================

CREATE TABLE Roles (
    RolID INT PRIMARY KEY AUTO_INCREMENT,
    NombreRol VARCHAR(50) NOT NULL
);

CREATE TABLE Empleados (
    EmpleadoID INT PRIMARY KEY AUTO_INCREMENT,
    PrimerNombre VARCHAR(50) NOT NULL,
    ApellidoPaterno VARCHAR(50) NOT NULL,
    ApellidoMaterno VARCHAR(50) NOT NULL,
    DNI CHAR(8) NOT NULL,
    Correo VARCHAR(100) NOT NULL DEFAULT 'a@gmail.com',
    Telefono VARCHAR(30),
    RolID INT NOT NULL,
    CONSTRAINT UQ_Empleados_DNI UNIQUE (DNI),
    -- Para DNI, se usa REGEXP para validar que sean 8 dígitos.
    -- Las restricciones CHECK en MySQL son forzadas a partir de la versión 8.0.16.
    CONSTRAINT CHK_Empleados_DNI CHECK (DNI REGEXP '^[0-9]{8}$'),
    FOREIGN KEY (RolID) REFERENCES Roles(RolID)
);

-- ===============================
-- TABLAS DE CLIENTES Y MASCOTAS
-- ===============================

CREATE TABLE Clientes (
    ClienteID INT PRIMARY KEY AUTO_INCREMENT,
    PrimerNombre VARCHAR(50) NOT NULL,
    ApellidoPaterno VARCHAR(50) NOT NULL,
    ApellidoMaterno VARCHAR(50) NOT NULL,
    DNI CHAR(8) NOT NULL,
    Telefono VARCHAR(30),
    Direccion VARCHAR(200),
    Correo VARCHAR(100) NOT NULL DEFAULT 'a@gmail.com',
    CONSTRAINT UQ_Clientes_DNI UNIQUE (DNI),
    CONSTRAINT CHK_Clientes_DNI CHECK (DNI REGEXP '^[0-9]{8}$')
);

CREATE TABLE Especies (
    EspecieID INT PRIMARY KEY AUTO_INCREMENT,
    NombreEspecie VARCHAR(50) NOT NULL
);

CREATE TABLE Razas (
    RazaID INT PRIMARY KEY AUTO_INCREMENT,
    NombreRaza VARCHAR(50) NOT NULL,
    EspecieID INT NOT NULL,
    FOREIGN KEY (EspecieID) REFERENCES Especies(EspecieID)
);

CREATE TABLE Mascotas (
    MascotaID INT PRIMARY KEY AUTO_INCREMENT,
    Nombre VARCHAR(50) NOT NULL,
    Edad INT CHECK (Edad >= 0),
    Sexo CHAR(1) NOT NULL CHECK (Sexo IN ('M', 'H')),
    ClienteID INT NOT NULL,
    RazaID INT NOT NULL,
    FOREIGN KEY (ClienteID) REFERENCES Clientes(ClienteID),
    FOREIGN KEY (RazaID) REFERENCES Razas(RazaID)
);

-- ===============================
-- TABLAS DE CITAS Y SERVICIOS EN CITA
-- ===============================

CREATE TABLE Citas (
    CitaID INT PRIMARY KEY AUTO_INCREMENT,
    Fecha DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- GETDATE() se convierte a CURRENT_TIMESTAMP en MySQL
    Estado VARCHAR(50) NOT NULL DEFAULT 'Pendiente', -- Nuevo campo 'Estado'
    MascotaID INT NOT NULL,
    EmpleadoID INT NOT NULL,
    FOREIGN KEY (MascotaID) REFERENCES Mascotas(MascotaID),
    FOREIGN KEY (EmpleadoID) REFERENCES Empleados(EmpleadoID)
);

CREATE TABLE CitaServicios (
    CitaServicioID INT PRIMARY KEY AUTO_INCREMENT,
    CitaID INT NOT NULL,
    ServicioID INT NOT NULL,
    FOREIGN KEY (CitaID) REFERENCES Citas(CitaID),
    FOREIGN KEY (ServicioID) REFERENCES Servicios(ServicioID)
);


